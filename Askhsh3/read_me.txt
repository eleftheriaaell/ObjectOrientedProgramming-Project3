---------------------------------------------------------------------------------
Ελευθερία Έλληνα
ΑΜ: 1115201800228
---------------------------------------------------------------------------------
~Άσκηση 3
---------------------------------------------------------------------------------
Εντολή μεταγλώττισης:
g++ *.cc
---------------------------------------------------------------------------------
Επιλογή private/public μεταβλητών/συναρτήσεων: Σε όλες τις κλάσεις, οι private 
μεταβλητές/συναρτήσεις έχουν επιλεχθεί έτσι ώστε να μην είναι προσβάσιμες από 
τον χρήστη. Όλες οι public μεταβλητές/συναρτήσεις έχουν δηλωθεί έτσι ώστε να γίνει
σωστή χρήση των private μεταβλητών/συναρτήσεων. 
----------------------------------------------------------------------------------
Επιλογή virtual/pure virtual συναρτήσεων: Σε όλες κλάσεις γίνεται χρήση 
virtual συναρτήσεων, έτσι ώστε να γίνει δυναμική σύνδεση μεταξύ της βασικής και της 
παράγωγης κλάσης. Έτσι, δημιουργείται ο δείκτης στη βασική κλάση που αναφέρεται σε 
όλα τα παράγωγα αντικείμενα.
----------------------------------------------------------------------------------
ΣΥΝΑΡΤΗΣΕΙΣ:
----------------------------------------------------------------------------------
ΑΡΧΕΙΟ main.cc:

Δημιουργεί το αντικείμενο Plane00 τύπου Plane που είναι Object καθώς και ένα employee 
από κάθε κατηγορία. Στη συνέχεια καλεί τη συνάρτηση process για το αεροπλάνο, τη
συνάρτηση report για κάθε εργαζόμενο και τη ready_check του αεροπλάνου. Τέλος καλείται
η συνάρτηση clone_encrypt_and_print. Θα γίνει επεξήγηση των παραπάνω συναρτήσεων στη 
συνέχεια.

-----------------------------------------------------------------------------------
ΑΡΧΕΙΟ Object.cc:

Cοnstructor(): Δημιουργεί τα ID των Αντικειμένων μέσω static μεταβλητής και τυπώνει
	       το απαιτούμενο μήνυμα δημιουργίας του Αντικειμένου.

Destructor(): Τυπώνει το απαιτούμενο μήνυμα για τη διαγραφή του Αντικειμένου.

equal(Object& OB): Ελέγχει την ισότητα, όσον αφορά το περιεχόμενο, μεταξύ του υπάρχοντος Αντικειμένου και 
		  αυτού που εισάγεται σαν όρισμα.

identical(Object& OB): Ελέγχει την ισότητα μεταξύ του υπάρχοντος Αντικειμένου και 
		      αυτού που εισάγεται σαν όρισμα, δηλαδή την πλήρη ταύτιση αυτών.

-----------------------------------------------------------------------------------
ΑΡΧΕΙΟ Object.h:

set(int i): Παίρνει σαν όρισμα έναν ακέραιο τον οποίο θέτει σαν ID.

get(): Επιστρέφει το ID του Αντικειμένου.

toString(): Επιστρέφει σε μορφή συμβολοσειράς το ID του Αντικειμένου.

----------------------------------------------------------------------------------------------
ΑΡΧΕΙΟ String.cc:

Constructor(): Τυπώνει το απαιτούμενο μήνυμα για τη δημιουργία της Συμβολοσειράς.

Destructor(): Τυπώνει το απαιτούμενο μήνυμα για τη διαγραφή της Συμβολοσειράς.

length(): Επιστρέφει το μήκος της Συμβολοσειράς.

clear(): Αδειάζει τη Συμβολοσειρά.

concat(String str1): Συνενώνουμε τη Συμβολοσειρά με αυτή που παίρνει σαν όρισμα.

at(int pos): Παίρνει σαν όρισμα μία θέση συμβολοσειράς και επιστρέφει το σύμβολο της θέσης εκείνης
	(τυχαία επιλογή θέσης συμβολοσειράς).

updateAt(char c, int pos): Παίρνει σαν όρισμα μία θέση συμβολοσειράς και το σύμβολο αυτής και το 
			 αντικαθιστά με το γράμμα 'k' (τυχαία επιλογή συμβόλου αντικατάστασης όπως 
			και θέσης συμβολοσειράς).

print(): Τυπώνει το περιεχόμενο της Συμβολοσειράς.

equal(String& str2): Ελέγχει την ισότητα, όσον αφορά το περιεχόμενο, μεταξύ της υπάρχουσας Συμβολοσειράς και 
		 αυτής που εισάγεται σαν όρισμα.

identical(String& str2): Ελέγχει την ισότητα μεταξύ της υπάρχουσας Συμβολοσειράς και 
			αυτής που εισάγεται σαν όρισμα, δηλαδή την πλήρη ταύτιση αυτών.

clone(): Δημιουργεί νέα Συμβολοσειρά και αντιγράφει σε αυτή την ήδη υπάρχουσα. Τέλος επιστρέφει
	το αντίγραφό της.

-------------------------------------------------------------------------------------------------
ΑΡΧΕΙΟ String.h:

set_s(string s): Παίρνει σαν όρισμα μια συμβολοσειρά την οποία θέτει σαν περιεχόμενο της Συμβολοσειράς.

get_s(): Επιστρέφει το περιεχόμενο της Συμβολοσειράς.

toString(): Επιστρέφει σε μορφή συμβολοσειράς το ID της Συμβολοσειράς συνενωμένο με το περιεχόμενό της.

-------------------------------------------------------------------------------------------------
ΑΡΧΕΙΟ Plane.cc:

Constructor(): Δίνει τίτλο στο Αεροπλάνο μέσω της συνάρτησης set_s, από το αρχείο String.h. Στη συνέχεια
		δίνει τυχαίο αριθμό επιβατών καθώς και χώρων επιβατών. Δημιουργεί τους χώρους επιβατών, χώρους
		εξοπλισμού και χώρο εμπορευμάτων. Επίσης θέτει περιγραφή στο Αεροπλάνο μέσω της συνάρτησης
		set_s και toString, από το αρχείο String.h και Plane.cc αντίστοιχα. Τέλος τυπώνει το απαιτούμενο
		μήνυμα δημιουργίας του Αεροπλάνου.

Destructor(): Τυπώνει το απαιτούμενο μήνυμα για διαγραφή του Αεροπλάνου. Επίσης διαγράφει τους χώρους του 
	     Αεροπλάνου.

process(SecurityEmployee*, MaintenanceEmployee*, CleaningEmployee*): Η process του Αεροπλάνου, καλεί τις
								συναρτήσεις process των Compartments του Αεροπλάνου οι οποίες παίρνουν σαν όρισμα τον
								κατάλληλο, για κάθε Compartment, εργαζόμενο. Στη συνέχει καλεί τη ready_check για κάθε 
								Compartment και όταν γίνει επιβεβαίωση ετοιμότητας των χώρων του Αεροπλάνου τότε,
								επιστρέφει την τιμή 1 σαν ένδειξη λήξης του ελέγχου.

equal(Plane&): Ελέγχει την ισότητα, όσον αφορά το περιεχόμενο, μεταξύ του υπάρχοντος Αεροπλάνου και αυτού 
		που εισάγεται σαν όρισμα.

identical(Plane&): Ελέγχει την ισότητα μεταξύ του υπάρχοντος Αεροπλάνου και αυτού που εισάγεται σαν όρισμα,
		δηλαδή την πλήρη ταύτιση αυτών.

clone(): Δημιουργεί νέο Αεροπλάνο,καλώντας τον άδειο constructor, και αντιγράφει σε αυτό το ήδη υπάρχον. Τέλος επιστρέφει
	 το αντίγραφό του.

toString(): Επιστρέφει σε μορφή συμβολοσειράς το ID του Αεροπλάνου συνενωμένο με τον τίτλο και τους χώρους του.

-------------------------------------------------------------------------------------------------
ΑΡΧΕΙΟ Plane.h:

ready_check(int i): Τυπώνει το απαιτούμενο μήνυμα σχετικά με την ετοιμότητα του Αεροπλάνου.

--------------------------------------------------------------------------------------------------
ΑΡΧΕΙΟ PlaneComponent.cc:

Constructor(): Τυπώνει το απαιτούμενο μήνυμα για τη δημιουργία χώρου Αεροπλάνου.

Destructor(): Τυπώνει το απαιτούμενο μήνυμα για διαγραφή χώρου Αεροπλάνου.

equal(PlaneComponent&):	Ελέγχει την ισότητα, όσον αφορά το περιεχόμενο, μεταξύ του υπάρχοντος χώρου Αεροπλάνου 
			και αυτού που εισάγεται σαν όρισμα.

identical(PlaneComponent&): Ελέγχει την ισότητα μεταξύ του υπάρχοντος χώρου Αεροπλάνου και αυτού που εισάγεται 
			    σαν όρισμα,	δηλαδή την πλήρη ταύτιση αυτών.

--------------------------------------------------------------------------------------------------
ΑΡΧΕΙΟ PlaneComponent.h:

toString(): Επιστρέφει σε μορφή συμβολοσειράς το ID του χώρου Αεροπλάνου συνενωμένο με την περιγραφή του.

get_p(): Επιστρέφει το περιεχόμενο της περιγραφής του χώρου.

set_p(string s): Παίρνει σαν όρισμα μια συμβολοσειρά την οποία θέτει σαν περιεχόμενο της περιγραφής του χώρου.


--------------------------------------------------------------------------------------------------
ΑΡΧΕΙΟ Compartments.cc:

PassengerCompartment::Constructor(): Καλείται η συνάρτηση set_p για την εισαγωγή ID στο Compartment.
				Στη συνέχεια γίνεται αρχικοποίηση του δείκτη PassengerCompartment.
				Και τέλος τυπώνει το απαιτούμενο μήνυμα για τη δημιουργία του χώρου.

PassengerCompartment::Destructor(): Τυπώνει το απαιτούμενο μήνυμα για τη διαγραφή του χώρου. Επίσης διαγράφει
				το δείκτη PassengerCompartment.

PassengerCompartment::ready_check(): Καλεί τη συνάρτηση get_p για την εκτύπωση του αντίστοιχου ID.
				  Τυπώνει το μήνυμα επιβεβαίωσης καταλληλότητας του χώρου και καλεί
				  την συνάρτηση ready_check για τον δείκτη PassengerCompartment αν αυτός 
				  υπάρχει σαν υποχώρος.

PassengerCompartment::clone():	Δημιουργεί ένα νέο PassengerCompartment και αντιγράφει σε αυτό την περιγραφή
				και το ID του ήδη υπάρχοντος χώρου. Τέλος επιστρέφει το αντίγραφο.

PrivateCompartment::Constructor(): Τυπώνει το απαιτούμενο μήνυμα για τη δημιουργία του χώρου.

PrivateCompartment::Destructor(): Τυπώνει το απαιτούμενο μήνυμα για τη διαγραφή του χώρου.

EquipmentCompartment::Constructor(): Καλείται η συνάρτηση set_p για την εισαγωγή ID στο Compartment.
				Τέλος τυπώνει το απαιτούμενο μήνυμα για τη δημιουργία του χώρου.

EquipmentCompartment::Destructor(): Τυπώνει το απαιτούμενο μήνυμα για τη διαγραφή του χώρου.

EquipmentCompartment::ready_check(): Καλεί τη συνάρτηση get_p για την εκτύπωση του αντίστοιχου ID.
				   Τυπώνει το μήνυμα επιβεβαίωσης καταλληλότητας του χώρου.

EquipmentCompartment::clone():	Δημιουργεί ένα νέο EquipmentCompartment και αντιγράφει σε αυτό την περιγραφή
				και το ID του ήδη υπάρχοντος χώρου. Τέλος επιστρέφει το αντίγραφο.

CargoBay::Constructor(): Καλείται η συνάρτηση set_p για την εισαγωγή ID στο Compartment.
			Στη συνέχεια γίνεται δημιουργία του δείκτη EquipmentCompartment.
			Και τέλος τυπώνει το απαιτούμενο μήνυμα για τη δημιουργία του χώρου.

CargoBay::Destructor(): Τυπώνει το απαιτούμενο μήνυμα για τη διαγραφή του χώρου. Επίσης διαγράφει
			το δείκτη EquipmentCompartment.

CargoBay::ready_check(): Καλεί τη συνάρτηση get_p για την εκτύπωση του αντίστοιχου ID.
			Τυπώνει το μήνυμα επιβεβαίωσης καταλληλότητας του χώρου και καλεί
			την συνάρτηση ready_check για τον δείκτη EquipmentCompartment αν αυτός
			υπάρχει σαν υποχώρος.

CargoBay::clone(): Δημιουργεί ένα νέο CargoBay και αντιγράφει σε αυτό την περιγραφή
		 και το ID του ήδη υπάρχοντος χώρου. Τέλος επιστρέφει το αντίγραφο.

--------------------------------------------------------------------------------------------------
ΑΡΧΕΙΟ Compartments.h:

PassengerCompartment::process(SecurityEmployee*): Καλεί την workOn του εργαζομένου. Στη συνέχεια 
					  	 ο δείκτης PassengerCompartment, αν υπάρχει, ξανακαλεί την 
						συνάρτηση process με όρισμα τον ίδιο εργαζόμενο.

PassengerCompartment::process(CleaningEmployee*): Καλεί την workOn του εργαζομένου. Στη συνέχεια 
					  	ο δείκτης PassengerCompartment, αν υπάρχει, ξανακαλεί την 
						συνάρτηση process με όρισμα τον ίδιο εργαζόμενο.

EquipmentCompartment::process(SecurityEmployee*): Καλεί την workOn του εργαζομένου.

EquipmentCompartment::process(MaintenanceEmployee*): Καλεί την workOn του εργαζομένου.

CargoBay::process(SecurityEmployee*): Καλεί την workOn του εργαζομένου. Στη συνέχεια 
				    ο δείκτης EquipmentCompartment, αν υπάρχει, ξανακαλεί την 
				    συνάρτηση process με όρισμα τον ίδιο εργαζόμενο.

CargoBay::process(MaintenanceEmployee*): Καλεί την workOn του εργαζομένου. Στη συνέχεια 
					 ο δείκτης EquipmentCompartment, αν υπάρχει, ξανακαλεί την 
					συνάρτηση process με όρισμα τον ίδιο εργαζόμενο.

CargoBay::process(CleaningEmployee*): Καλεί την workOn του εργαζομένου. Ο δείκτης EquipmentCompartment, αν υπάρχει, 
				    δεν ξανακαλεί την συνάρτηση process με όρισμα τον ίδιο εργαζόμενο, καθώς
				    ο CleaningEmployee δεν έχει πρόσβαση στο EquipmentCompartment.

--------------------------------------------------------------------------------------------------
ΑΡΧΕΙΟ Employee.cc:

Employee::Constructor(): Τυπώνει το απαιτούμενο μήνυμα για δημιουργία εργαζομένου.

Employee::Destructor(): Τυπώνει το απαιτούμενο μήνυμα για διαγραφή εργαζομένου.

Employee::equal(): Ελέγχει την ισότητα, όσον αφορά το περιεχόμενο, μεταξύ του υπάρχοντος εργαζομένου
		   και αυτού που εισάγεται σαν όρισμα.

Employee::identical(): Ελέγχει την ισότητα μεταξύ του υπάρχοντος εργαζομένου και αυτού που εισάγεται 
		    σαν όρισμα,	δηλαδή την πλήρη ταύτιση αυτών.

SecurityEmployee::Constructor(): Καλεί τη συνάρτηση set_e για να θέσει όνομα εργαζομένου (ασφάλειας) και 
				τυπώνει το απαιτούμενο μήνυμα για δημιουργία εργαζομένου (ασφάλειας).


SecurityEmployee::Destructor(): Τυπώνει το απαιτούμενο μήνυμα για διαγραφή εργαζομένου (ασφάλειας).

SecurityEmployee::clone(): Δημιουργεί ένα νέο εργαζόμενο ασφαλείας και αντιγράφει σε αυτό το όνομα
			 και το ID του ήδη υπάρχοντος εργαζομένου. Τέλος επιστρέφει το αντίγραφο. 

MaintenanceEmployee::Constructor(): Καλεί τη συνάρτηση set_e για να θέσει όνομα εργαζομένου (συντήρησης) και 
				τυπώνει το απαιτούμενο μήνυμα για δημιουργία εργαζομένου (συντήρησης).

MaintenanceEmployee::Destructor(): Τυπώνει το απαιτούμενο μήνυμα για διαγραφή εργαζομένου (συντήρησης).

MaintenanceEmployee::clone(): Δημιουργεί ένα νέο εργαζόμενο συντήρησης και αντιγράφει σε αυτό το όνομα
			και το ID του ήδη υπάρχοντος εργαζομένου. Τέλος επιστρέφει το αντίγραφο. 

CleaningEmployee::Constructor(): Καλεί τη συνάρτηση set_e για να θέσει όνομα εργαζομένου (καθαριότητας) και 
				 τυπώνει το απαιτούμενο μήνυμα για δημιουργία εργαζομένου (καθαριότητας).

CleaningEmployee::Destructor(): Τυπώνει το απαιτούμενο μήνυμα για διαγραφή εργαζομένου (καθαριότητας).

CleaningEmployee::clone(): Δημιουργεί ένα νέο εργαζόμενο καθαριότητας και αντιγράφει σε αυτό το όνομα
			και το ID του ήδη υπάρχοντος εργαζομένου. Τέλος επιστρέφει το αντίγραφο. 

--------------------------------------------------------------------------------------------------
ΑΡΧΕΙΟ Employee.h:

toString(): Επιστρέφει σε μορφή συμβολοσειράς το ID του εργαζομένου συνενωμένο με το όνομά του.

get_e(): Επιστρέφει το περιεχόμενο του ονόματος του εργαζομένου.

set_e(string s): Παίρνει σαν όρισμα μια συμβολοσειρά την οποία θέτει σαν περιεχόμενο του ονόματος του εργαζομένου.

SecurityEmployee::workOn(class PassengerCompartment*): Τυπώνει το απαιτούμενο μήνυμα για την εργασία του εργαζομένου
				 		     που την καλεί, στο χώρο αεροπλάνου που παίρνει σαν όρισμα.

SecurityEmployee::workOn(class EquipmentCompartment*): Τυπώνει το απαιτούμενο μήνυμα για την εργασία του εργαζομένου
				 		     που την καλεί, στο χώρο αεροπλάνου που παίρνει σαν όρισμα.

SecurityEmployee::workOn(class CargoBay*): Τυπώνει το απαιτούμενο μήνυμα για την εργασία του εργαζομένου
				 	που την καλεί, στο χώρο αεροπλάνου που παίρνει σαν όρισμα.

SecurityEmployee::report(int i): Τυπώνει το απαιτούμενο μήνυμα σχετικά με την ετοιμότητα του χώρου στον
				οποίο δουλεύει ο εργαζόμενος που την καλεί.

MaintenanceEmployee::workOn(EquipmentCompartment*): Τυπώνει το απαιτούμενο μήνυμα για την εργασία του εργαζομένου
				 		που την καλεί, στο χώρο αεροπλάνου που παίρνει σαν όρισμα.

MaintenanceEmployee::workOn(CargoBay*): Τυπώνει το απαιτούμενο μήνυμα για την εργασία του εργαζομένου
				 	που την καλεί, στο χώρο αεροπλάνου που παίρνει σαν όρισμα.

MaintenanceEmployee::report(int i): Τυπώνει το απαιτούμενο μήνυμα σχετικά με την ετοιμότητα του χώρου στον
				οποίο δουλεύει ο εργαζόμενος που την καλεί.

CleaningEmployee::workOn(PassengerCompartment*): Τυπώνει το απαιτούμενο μήνυμα για την εργασία του εργαζομένου
				 		 που την καλεί, στο χώρο αεροπλάνου που παίρνει σαν όρισμα.

CleaningEmployee::workOn(CargoBay*): Τυπώνει το απαιτούμενο μήνυμα για την εργασία του εργαζομένου
				  που την καλεί, στο χώρο αεροπλάνου που παίρνει σαν όρισμα.

CleaningEmployee::report(int i): Τυπώνει το απαιτούμενο μήνυμα σχετικά με την ετοιμότητα του χώρου στον
				 οποίο δουλεύει ο εργαζόμενος που την καλεί.

--------------------------------------------------------------------------------------------------
ΑΡΧΕΙΟ clone_encrypt_and_print.cc:

clone_encrypt_and_print(Object& ob): Δημιουργία αντιγράφου του Αντικειμένου, το οποίο εισάγεται σαν όρισμα 
				της συνάρτησης. Στη συνέχεια, καλείται η equal και identical για
				τη σύγκριση του πρότυπου με τον κλώνο του. Έπειτα καλείται η toString 
				για κάθε Αντικείμενο ξεχωριστά και τα αποτελέσματα αποθηκεύονται σε συμβολοσειρές.
				Μετά, γίνεται δημιουργία δύο Συμβολοσειρών οι οποιές καλούν την set_s με όρισμα τις
				δύο απλές συμβολοσειρές που ήταν το αποτελέσμα της toString, ώστε να γεμίσει η περιγραφή
				τους. Γίνεται, στη συνέχεια, μετατροπή της περιγραφής της δεύτερης Συμβολοσειράς, μέσω της
				updateAt και γίνεται εκτύπωση των 2 περιγραφών. Καλείται η concat για την συνένωση των
				Συμβολοσειρών και τυπώνεται το μήκος της δεύτερης, μέσα στην οποία αποθηκεύτηκε η συνένωσή τους.
				Καλείται μετά η clear η οποία εκκενώνει την δεύτερη Συμβολοσειρά και τυπώνει το μήκος αυτής.
				Τέλος διαγράφεται ο κλώνος.

--------------------------------------------------------------------------------------------------
ΑΡΧΕΙΟ to_string.cc:

to_String(int num): Δημιουργία πίνακα με τους αριθμούς στη μορφή χαρακτήρα και η επεξεργασία του 
		αριθμού που εισάγεται σαν όρισμα στην to_String για την μετατροπή του σε συμβολοσειρά. 
		Τέλος επιστροφή του αριθμού ως συμβολοσειρά.

--------------------------------------------------------------------------------------------------